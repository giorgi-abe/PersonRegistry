services:
  personregistry.api:
    build:
      context: .
      dockerfile: PersonRegistry.Api/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - sqlserver
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Server=sqlserver;Database=PersonRegistryApp;User=sa;Password=Your_password123!;TrustServerCertificate=True;MultipleActiveResultSets=True"
    networks:
      - appnetwork

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Your_password123!"
      ACCEPT_EULA: "Y"
    volumes:
      - mssql_data:/var/opt/mssql
    networks:
      - appnetwork

  # graylog:
  #   image: graylog/graylog:5.0
  #   depends_on:
  #     - mongodb
  #     - elasticsearch
  #   environment:
  #     GRAYLOG_PASSWORD_SECRET: some-random-secret-key
  #     GRAYLOG_ROOT_PASSWORD_SHA2: 2c1743a391305fbf367df8e4f069f9f9beba3e8a2e331390d5e6f8b1a7a623f7 # password: admin
  #     GRAYLOG_HTTP_EXTERNAL_URI: http://localhost:9000/
  #   ports:
  #     - "9000:9000"       
  #     - "12201:12201/udp" 
  #   networks:
  #     - appnetwork

  # mongodb:
  #   image: mongo:5.0
  #   networks:
  #     - appnetwork

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #   networks:
  #     - appnetwork

volumes:
  mssql_data:

networks:
  appnetwork: